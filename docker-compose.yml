version: '3.4'

services:
    # placeholder service
    elife-style-content-adapter:
        image: busybox
        command: sleep 3600
        restart: always
    dummy-api_fpm:
        image: ${DOCKER_NAMESPACE}/dummy-api:${REVISION_DUMMY_API}
        volumes:
            - ./.docker/api/content_api.yaml:/app/config/packages/content_api.yaml
            - ./.docker/api/data:/app/data/
            - public-api:/app/public
        restart: always
    browser_fpm:
        image: ${DOCKER_NAMESPACE}/browser:${REVISION_BROWSER}
        volumes:
            - ./.docker/browser/libero_page.yaml:/app/config/packages/libero_page.yaml
            - ./.docker/browser/translations/:/app/translations/
            - public-browser:/app/public
        environment:
            API_URI: http://api-gateway:8081
            APP_SECRET:
        restart: always
    pattern-library:
        image: ${DOCKER_NAMESPACE}/pattern-library:${REVISION_PATTERN_LIBRARY}
        restart: always
    blog-articles_fpm:
        image: ${DOCKER_NAMESPACE}/content-store:${REVISION_CONTENT_STORE}
        volumes:
            - ./.docker/blog-articles/data:/app/data/
        environment:
            APP_SECRET:
            DEFAULT_LOCALE:
            SERVICE_NAME: blog-articles
        restart: always
    blog-articles_web:
        image: nginx:1.15.2-alpine
        volumes:
            - .docker/blog-articles/nginx.conf:/etc/nginx/conf.d/default.conf
        healthcheck:
            test: ["CMD", "wget", "-O", "/dev/null", "localhost:80/ping"]
            interval: 5s
        restart: always
        depends_on:
            - blog-articles_fpm
    scholarly-articles_fpm:
        image: ${DOCKER_NAMESPACE}/content-store:${REVISION_CONTENT_STORE}
        volumes:
            - ./.docker/scholarly-articles/data:/app/data/
        environment:
            APP_SECRET:
            DEFAULT_LOCALE:
            SERVICE_NAME: scholarly-articles
        restart: always
    scholarly-articles_web:
        image: nginx:1.15.2-alpine
        volumes:
            - .docker/scholarly-articles/nginx.conf:/etc/nginx/conf.d/default.conf
        healthcheck:
            test: ["CMD", "wget", "-O", "/dev/null", "localhost:80/ping"]
            interval: 5s
        restart: always
        depends_on:
            - scholarly-articles_fpm
    search_elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.6.1
        volumes:
            - data-search:/usr/share/elasticsearch/data
        environment:
            - discovery.type=single-node
        healthcheck:
            test: ["CMD", "wget", "-O", "/dev/null", "localhost:9200/"]
            interval: 5s
    search_wsgi:
        image: ${DOCKER_NAMESPACE}/search:${REVISION_SEARCH}
        command: uwsgi --ini=uwsgi.ini
        volumes:
            - .docker/search/uwsgi.ini:/srv/app/uwsgi.ini
            - .docker/search/settings.py:/srv/app/search/settings.py
        restart: always
        depends_on:
            - search_elasticsearch
    search_web:
        image: nginx:1.15.5-alpine
        volumes:
            - .docker/search/nginx.conf:/etc/nginx/conf.d/default.conf
        healthcheck:
            test: ["CMD", "wget", "-O", "/dev/null", "localhost:80/ping"]
            interval: 5s
        restart: always
        depends_on:
            - search_wsgi
    api-gateway:
        image: nginx:1.15.2-alpine
        volumes:
            - .docker/api-gateway-nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - ${PUBLIC_PORT_GATEWAY}:8081
        healthcheck:
            test: ["CMD", "wget", "-O", "/dev/null", "localhost:8081/ping"]
            interval: 5s
        restart: always
        depends_on:
            - blog-articles_fpm
            - blog-articles_web
            - scholarly-articles_fpm
            - scholarly-articles_web
            - search_wsgi
            - search_web
    web:
        image: nginx:1.15.2-alpine
        volumes:
            - .docker/public-nginx.conf:/etc/nginx/conf.d/default.conf
            - public-api:/app/api/public
            - public-browser:/app/browser/public
        ports:
            - ${PUBLIC_PORT_BROWSER}:80
            - ${PUBLIC_PORT_PATTERN_LIBRARY}:8082
            - ${PUBLIC_PORT_DUMMY_API}:8083
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost", "80"]
            interval: 5s
        restart: always
        depends_on:
            - browser_fpm
            - dummy-api_fpm
            - pattern-library

volumes:
    public-api:
    public-browser:
    data-search:
        external: true
